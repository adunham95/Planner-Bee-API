// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}


datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL") // uses connection pooling
  directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
}


model Article {
  id          Int      @id @default(autoincrement())
  title       String   @unique
  description String?
  body        String
  published   Boolean  @default(false)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
    author      User?    @relation(fields: [authorId], references: [id])
  authorId    Int?
}


model User {
  id        Int       @id @default(autoincrement())
  name      String
  email     String    @unique
  password  String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  articles  Article[]
}


model ECardTemplate {
  id              String           @id @default(uuid())
  sku             String           @unique
  name            String
  description     String
  cost            Int
  createdAt       DateTime         @default(now())
  updatedAt       DateTime         @default(now()) @updatedAt
  includedOptions String[]         @default([])
  components      ECardComponent[]
  imageURL        String?
  visible         Boolean          @default(true)

  @@index([sku])
}


model ECardComponent {
  id               String        @id @default(uuid())
  key              String?       @default(uuid())
  ecardComponentID String
  ecardID          String
  ecard            ECardTemplate @relation(references: [id], fields: [ecardID])
  label            String?       @default("")
  editable         Boolean?      @default(false)
  default          String?       @default("")
  customStyles     String?       @default("")
  options          String?       @default("")
  createdAt        DateTime      @default(now())
  updatedAt        DateTime      @default(now()) @updatedAt

  @@index([key])
}
